spring:
  application:
    name: resource-service
  datasource:
    url: ${RESOURCE_SERVICE_DB_URL:jdbc:postgresql://localhost:5432/resourcedb}
    username: ${RESOURCE_SERVICE_DB_USER:postgres}
    password: ${RESOURCE_SERVICE_DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate.format_sql: true
  cloud:
    stream:
      bindings:
        sendResource-out-0:
          destination: song-topic
      kafka:
        binder:
          brokers: http://${KAFKA_HOST:localhost}:9092


song-service-url: ${SONG_SERVICE_BASE_URL:http://song-service:8082}

server:
  port: ${RESOURCE_SERVICE_INSIDE_PORT:8081}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://localhost:8761/eureka/}
    registerWithEureka: true
    fetchRegistry: true
    enabled: true

aws:
  s3:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    bucket: mp3filemc
    region: eu-north-1
kafka:
  address: ${KAFKA_HOST:localhost}:9092