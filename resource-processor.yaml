spring:
  application:
    name: resource-processor
  cloud:
    stream:
      bindings:
        handleResourceMessage-in-0:
          destination: song-topic
          group: resource-processor-group
      kafka:
        binder:
          brokers: ${KAFKA_HOST:localhost}:9092
        bindings:
          handleResourceMessage-in-0:
            consumer:
              enable-dlq: true
              dlq-name: song-topic-dlq
              auto-bind-dlq: true
              retry:
                max-attempts: 3
              backoff:
                initial-interval: 2000
                max-interval: 10000
                multiplier: 2.0

server:
  port: 0

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://localhost:8761/eureka/}
    registerWithEureka: true
    fetchRegistry: true
    enabled: true

kafka:
  address: ${KAFKA_HOST:localhost}:9092 # broker
  group-id: resource-processor-group

management:
  endpoints:
    web:
      exposure:
        include: health,info
  health:
    show-details: always

song-service-url: ${SONG_SERVICE_BASE_URL:http://song-service:8082}
resource-service-url: ${RESOURCE_SERVICE_BASE_URL:http://resource-service:8081}

